<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="915,4181" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="31">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main" sap:VirtualizedContainerService.HintSize="614,4076" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="sc:IEnumerable" Name="varFileList" />
      <Variable x:TypeArguments="x:String" Name="varProductName" />
      <Variable x:TypeArguments="x:String" Name="varCompanyName" />
      <Variable x:TypeArguments="x:String" Name="varModelName" />
      <Variable x:TypeArguments="x:String" Name="varCompanyAddress" />
      <Variable x:TypeArguments="x:String" Name="varTestDate" />
      <Variable x:TypeArguments="x:String" Name="varReportDate" />
      <Variable x:TypeArguments="x:String" Name="varReportNumber" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Assign FileList" sap:VirtualizedContainerService.HintSize="572,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="sc:IEnumerable">[varFileList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sc:IEnumerable">[Directory.GetFiles("ScannedDocuments","*.pdf")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="572,3884" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[varFileList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="pdf" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="536,3750" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="[pdf.ToString]" sap:VirtualizedContainerService.HintSize="494,87" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey 'acrord32.exe BCTC-62598...'" sap:VirtualizedContainerService.HintSize="494,154" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="y" KeyModifiers="Ctrl">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="290352a3-32ba-4706-8a5d-09208dc4a9ec" InformativeScreenshot="a03f8ad511fd4bdeb25baaaad8e57d4d" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (32-bit)' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window Zoom Window" sap:VirtualizedContainerService.HintSize="494,372" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="df598f035855dc2f38d1d7b8b216d2ab" Selector="&lt;wnd app='acrord32.exe' cls='#32770' title='Zoom To' /&gt;">
              <ui:WindowScope.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,226" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBetweenKeys="{x:Null}" EmptyField="{x:Null}" Activate="True" DelayBefore="5" DelayMS="5" DisplayName="Type Into 'Edit'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="True" SimulateType="False" Text="[&quot;75%&quot; +&quot;[k(enter)]&quot;]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="234ca713-1205-4c69-9624-51f5353c05b1" InformativeScreenshot="7572421e009ea4abcef864de97144d0c" Selector="&lt;wnd aaname='Magnification:' cls='ComboBoxEx32' /&gt;&lt;wnd aaname='Magnification:' cls='ComboBox' /&gt;&lt;wnd aaname='Magnification:' cls='Edit' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                  </Sequence>
                </ActivityAction>
              </ui:WindowScope.Body>
            </ui:WindowScope>
            <Sequence DisplayName="Screen Scraping" sap:VirtualizedContainerService.HintSize="494,2925" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'BCTC 6259 Acrobatsd'" sap:VirtualizedContainerService.HintSize="452,2833" sap2010:WorkflowViewState.IdRef="WindowScope_2" InformativeScreenshot="b3d1915b8de10401abdd9d03608e96d5" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (32-bit)' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="418,2687" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="376,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,2533" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Product Name" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_1">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_4" Image="[Image]" Scale="3" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="91a84569-c293-4e04-b307-4644fad0dc6d" InformativeScreenshot="0828b1e063bd53c69f0be65f90108a02" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="656, 317, 432, 29" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[varProductName]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[varProductName.ToString]" />
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR CompanyName" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_2">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_5" Image="[Image]" Scale="3" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="239ab8bb-f5f8-4643-b8d3-26ec7fd22796" InformativeScreenshot="df91cce7277f09569fad6ad58c4e18a2" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="658, 438, 430, 32" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[varCompanyName]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[varCompanyName.ToString]" />
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Model Name" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_3">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_6" Image="[Image]" Scale="3" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="63c64e6e-4686-4987-b9ad-c5baf24fb4ab" InformativeScreenshot="3e88d1df52cdd9fb2723f48fe7a06a30" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="657, 386, 431, 44" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[varModelName]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[varModelName.ToString]" />
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Company Address" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_4">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_7" Image="[Image]" Scale="3" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="c125b979-e5d5-4faa-bc46-e863a229c23c" InformativeScreenshot="63132798f1f39bebf5359e612e4947d6" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="656, 473, 433, 35" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[varCompanyAddress]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[varCompanyAddress.ToString]" />
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Test Date" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_5">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_8" Image="[Image]" Scale="3" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="2b3c0154-f262-4065-ad7d-474172681291" InformativeScreenshot="5ca3fa9d32dfbd7049223feb2221255e" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="656, 590, 433, 33" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[varTestDate]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="[varTestDate.ToString]" />
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Report Date" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_6">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_9" Image="[Image]" Scale="3" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="363b554a-b7ff-4568-910a-7f7d630e9be8" InformativeScreenshot="511b70752e5197b6b44d3cddb953d7d5" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="656, 631, 434, 34" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[varReportDate]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[varReportDate.ToString]" />
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Report Number" sap:VirtualizedContainerService.HintSize="334,168" sap2010:WorkflowViewState.IdRef="GetOCRText_7">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:MicrosoftOCR FilterRegion="{x:Null}" Language="{x:Null}" Output="{x:Null}" Profile="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_10" Image="[Image]" Scale="3" />
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="91e2c1b2-f4e4-4068-9493-a4ce1b854597" InformativeScreenshot="3e465e9202e8aea41db6ba0b9deb49be" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd aaname='Alert: Empty document' cls='AVL_AVView' title='AVPageView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="657, 672, 432, 34" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[varReportNumber]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[varReportNumber.ToString]" />
                        <ui:AppendLine DisplayName="Append Line" FileName="Scraped_Data.txt" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="AppendLine_1" Text="[&quot;Product Name: &quot; + varProductName + vbCr +&#xD;&#xA;&quot;Model Name: &quot; + varModelName + vbCr +&#xD;&#xA;&quot;Company Name: &quot; + varCompanyName + vbCr +&#xD;&#xA;&quot;Company Address: &quot; + varCompanyAddress + vbCr +&#xD;&#xA;&quot;Report Date: &quot; + varReportDate + vbCr +&#xD;&#xA;&quot;Test Date: &quot; + varTestDate + vbCr +&#xD;&#xA;&quot;Report Number: &quot; + varReportNumber]" UseDefaultEncoding="False" />
                        <ui:CloseApplication DisplayName="Close Application 'acrord32.exe BCTC-62598...'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
                          <ui:CloseApplication.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bb625f3e-a5a4-405c-a698-7b4a8a3ca245" InformativeScreenshot="e3e6ec57ccca1413ff3f737c40bc4221" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (32-bit)' /&gt;">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:CloseApplication.Target>
                        </ui:CloseApplication>
                      </Sequence>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>